#version 460 core

out vec4 FragColor;

in vec2 texCoords;
in vec3 Normals;
in vec3 FragPos;

uniform vec3 LightPos;
uniform vec3 LightColor;
uniform vec3 camPos;

vec3 objectColor = vec3(1.0, 0.0, 0.0);

void main()
{
      vec3 ambient = 0.05 * LightColor;

      vec3 norm = normalize(Normals);
      vec3 LightDir = normalize(LightPos - FragPos);

      float diff = max(dot(norm, LightDir), 0.0);
      vec3 diffuse = diff * LightColor;

      vec3 camDir = normalize(camPos - FragPos);
      vec3 halfWayDir = normalize(LightDir + camDir);
      float spec = pow(max(dot(norm, halfWayDir), 0.0), 64.0f);

       vec3 result = (ambient + diffuse + spec) * objectColor;
       FragColor = vec4(result, 1.0);         
}